{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e27f4626-3f9b-4300-a8da-3fbcc8e5460f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import torch\n",
    "import torch.nn.functional as F"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3e262546-8cfc-4613-8356-51f22817934f",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = torch.randn(2, 3, dtype=torch.double, requires_grad=True)\n",
    "y = torch.randn(2, 3, 2, dtype=torch.double, requires_grad=True)\n",
    "dist = F.gumbel_softmax(x, hard=True)\n",
    "\n",
    "select = torch.argmax(dist, 1)\n",
    "one_hot = torch.zeros_like(dist)\n",
    "one_hot[torch.arange(2), select] = dist[torch.arange(2), select]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b588eaf0-7bbe-48a1-873f-db0abcf9da23",
   "metadata": {},
   "outputs": [],
   "source": [
    "q = torch.matmul(dist.reshape(2, 1, 3), y).squeeze(1)\n",
    "(q**2).sum().backward(torch.ones(1).sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "9b23b86a-645f-4bb3-82b1-81e80ea51712",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([[-0.0121, -0.0070,  0.0191],\n",
       "        [ 0.0224, -0.0394,  0.0170]], dtype=torch.float64)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.grad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "3f08f8bb-6df6-479b-9786-9efd8edc9e92",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([[[ 0.0000,  0.0000],\n",
       "         [ 0.0000,  0.0000],\n",
       "         [ 0.9740, -0.6354]],\n",
       "\n",
       "        [[ 0.0000,  0.0000],\n",
       "         [ 0.0440,  0.5438],\n",
       "         [ 0.0000,  0.0000]]], dtype=torch.float64)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.grad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "eefe99e4-74e5-4900-bf1f-04c5aa262045",
   "metadata": {},
   "outputs": [],
   "source": [
    "((one_hot * y)**2).sum().backward(torch.ones(1).sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "71effd29-bd39-4ecd-9e2c-1836e6b501a3",
   "metadata": {},
   "outputs": [
    {
     "ename": "RuntimeError",
     "evalue": "The size of tensor a (3) must match the size of tensor b (2) at non-singleton dimension 2",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mRuntimeError\u001b[0m                              Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-4-d6f962af9ca6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdist\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbackward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mones\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mRuntimeError\u001b[0m: The size of tensor a (3) must match the size of tensor b (2) at non-singleton dimension 2"
     ]
    }
   ],
   "source": [
    "((dist * y)**2).sum().backward(torch.ones(1).sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c83c2aab-6ccd-46b8-93e0-2af56bb1ba06",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([[-0.2161,  0.6155, -0.3993],\n",
       "        [ 0.1167, -0.0075, -0.1092]], dtype=torch.float64)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.grad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "690bda2b-d49d-4115-ac60-4180ba573f89",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([[-0.0000, -2.2928, -0.0000],\n",
       "        [ 1.1366, -0.0000, -0.0000]], dtype=torch.float64)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.grad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "0a47a7f1-676c-44fc-8834-e99b500925fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([[0., 1., 0.],\n",
       "        [1., 0., 0.]], dtype=torch.float64, grad_fn=<IndexPutBackward>)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "one_hot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "085a69b0-c234-4ce5-913e-823d18b27ac2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "de0fd934-d2d3-4e67-b7c7-4178d637647d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0280818e-e524-4f64-8ab3-c17f5ae90f1f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e6b6ab5c-f824-4d88-8937-04d3c7b45809",
   "metadata": {},
   "outputs": [],
   "source": [
    "(y**2).sum().backward(torch.ones(1).sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ebb23589-0bc6-4be0-858d-2231f0170e92",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([[-0.0289, -0.0832,  0.1121],\n",
       "        [ 0.1140, -0.0405, -0.0736]], dtype=torch.float64)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.grad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "afb50ebb-fa52-45b5-bfd8-f3e7f2922a5f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([[7.9160e-04, 8.4861e-03, 9.9072e-01],\n",
       "        [7.4333e-01, 2.1263e-01, 4.4046e-02]], dtype=torch.float64,\n",
       "       grad_fn=<SoftmaxBackward>)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "96b06524-7399-4b01-aece-9cc42c4e3fd6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([[-0.0296,  0.1658, -0.1362],\n",
       "        [ 0.1442, -0.0037, -0.1405]], dtype=torch.float64)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.grad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "4d63e365-8f5f-4eab-b590-9e1ddc97c4fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "eg = torch.tensor([[1., 1., 1.], [1., 1., 1.,]])\n",
    "y.backward(gradient=eg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b27a7ab3-c404-4b6c-8de0-cb87c08d0071",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([[-1.8058e-16, -1.2432e-17, -2.9034e-17],\n",
       "        [ 8.8752e-18,  6.1323e-17,  4.0824e-17]], dtype=torch.float64)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.grad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "2b2eac16-5297-4598-aebd-4c0f44836991",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/gun/anaconda3/envs/py3_gpu/lib/python3.6/site-packages/ipykernel_launcher.py:1: UserWarning: The .grad attribute of a Tensor that is not a leaf Tensor is being accessed. Its .grad attribute won't be populated during autograd.backward(). If you indeed want the gradient for a non-leaf Tensor, use .retain_grad() on the non-leaf Tensor. If you access the non-leaf Tensor by mistake, make sure you access the leaf Tensor instead. See github.com/pytorch/pytorch/pull/30531 for more informations.\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    }
   ],
   "source": [
    "y.grad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "82c2de46-e313-4d91-a23f-08f916d67130",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(tensor([[-1.3333e+00, -2.8641e-01, -4.0185e-01,  1.2028e+00, -3.4317e+00,\n",
       "           7.3488e-01, -4.3983e-01,  2.1735e-01,  7.5964e-01, -4.8674e-01,\n",
       "          -3.2218e-01,  1.1817e+00,  1.5347e-01, -5.0965e-01,  1.0026e+00,\n",
       "           7.3640e-01,  4.4312e-01, -1.2749e+00, -1.3343e-02,  4.1568e-01],\n",
       "         [ 1.2382e-02,  9.8312e-01,  3.9941e-01,  1.6315e+00, -3.7004e-02,\n",
       "          -2.0134e+00,  3.4260e-01,  1.2003e+00,  1.6758e+00,  1.6142e+00,\n",
       "          -2.7863e-01,  2.2155e-01,  8.1304e-01, -1.9663e-02, -6.3205e-01,\n",
       "          -2.9744e-01,  9.1942e-03, -4.3205e-01, -7.6555e-02,  1.1628e+00],\n",
       "         [-3.7209e-01, -5.2963e-01, -2.9885e-01,  1.4602e+00,  8.2864e-01,\n",
       "          -5.0898e-01, -5.2964e-01,  1.2521e-01, -1.2101e+00,  7.3963e-01,\n",
       "           1.4167e+00,  2.7844e-01, -2.5914e+00,  4.2666e-01, -1.2405e+00,\n",
       "          -1.2864e-01,  7.0100e-01,  1.7090e-01, -9.1929e-01, -1.9175e+00],\n",
       "         [-1.4157e+00, -2.2428e-01,  2.0404e+00,  3.5576e-01, -1.0255e-01,\n",
       "           2.3917e+00,  4.6755e-01,  6.4018e-01, -1.3986e+00, -1.1494e+00,\n",
       "           8.4267e-01, -1.0825e-01, -7.4559e-01,  4.8290e-01,  1.7124e+00,\n",
       "           2.6785e-01, -1.5955e+00, -4.0138e-01, -9.4536e-01, -1.0232e+00],\n",
       "         [-4.4089e-01,  1.4025e+00, -1.3827e-01,  1.8213e-01,  9.7207e-01,\n",
       "          -9.1691e-02, -6.7667e-01,  7.2358e-01,  1.3448e-01, -1.1457e+00,\n",
       "          -8.5853e-01,  4.6747e-01,  1.7194e+00,  2.6436e-01, -1.3170e+00,\n",
       "           1.1697e+00, -1.9016e-01, -1.6009e+00, -4.0269e-02,  1.3225e-01],\n",
       "         [ 1.1431e+00,  1.5583e+00, -2.7005e-01,  1.0498e-01,  7.5197e-01,\n",
       "          -8.4627e-01, -1.7660e+00, -8.8541e-01,  1.3047e+00, -7.6547e-01,\n",
       "           4.9796e-01, -3.1586e-01,  1.1727e+00,  8.1778e-01,  8.1026e-02,\n",
       "          -2.5699e-01,  3.6891e-01,  1.4163e+00, -1.3108e+00,  2.9994e-01],\n",
       "         [-5.8891e-02, -3.8181e-01, -5.1153e-01, -2.1981e-01,  7.8595e-01,\n",
       "          -2.2201e+00,  1.9533e+00, -3.5354e-01,  1.8167e+00, -7.7616e-01,\n",
       "           1.9874e-02,  8.2179e-01,  1.3790e+00, -8.5149e-01,  1.3275e+00,\n",
       "           2.2314e-01,  4.4950e-01, -2.5252e-01, -1.9587e+00,  7.9927e-01],\n",
       "         [ 1.1930e+00, -3.4793e-02,  1.5923e+00, -9.9255e-01,  1.5396e+00,\n",
       "           1.0509e+00,  1.5445e+00, -1.1818e+00,  8.5507e-01,  5.4495e-01,\n",
       "          -1.1921e+00,  8.6286e-01, -8.1627e-01, -1.2434e-01, -1.5628e-01,\n",
       "           8.8784e-02, -1.1493e+00,  1.2998e-01,  9.7179e-01,  1.1127e+00],\n",
       "         [-1.8416e+00, -7.1821e-01, -1.6608e+00,  7.5741e-01,  1.7935e+00,\n",
       "          -2.4685e+00, -7.7247e-01, -2.6689e-01, -8.2870e-01, -2.4835e+00,\n",
       "          -2.0841e+00,  8.4819e-01, -9.2762e-01,  5.9870e-01, -9.0140e-01,\n",
       "           1.1590e+00,  6.0918e-01,  1.2258e-01, -1.4154e+00,  4.8803e-01],\n",
       "         [-6.1251e-01,  8.8229e-01, -2.1581e-01,  3.5987e-01,  8.3317e-01,\n",
       "          -7.8755e-01, -8.8132e-01, -5.7949e-02,  4.9476e-01,  3.4546e-01,\n",
       "           4.2213e-01, -2.2981e-01,  1.1467e+00, -3.7688e-01,  2.9826e-01,\n",
       "           1.3388e+00, -5.1811e-01,  8.8438e-02,  1.1252e+00, -4.7523e-01],\n",
       "         [-4.8378e-01, -2.0975e-01, -8.9251e-01,  8.0231e-02,  3.5583e-01,\n",
       "           1.2822e-01, -1.3039e+00, -4.5864e-01, -1.0601e+00, -4.3612e-01,\n",
       "           6.4432e-01,  1.9875e-02, -3.0136e-01,  4.3599e-01,  1.3927e+00,\n",
       "           8.9044e-01,  9.1561e-01, -1.2949e-01, -1.2908e-02, -9.8163e-01],\n",
       "         [-1.3299e+00, -1.9380e-01,  3.4684e-01, -3.7621e-01, -8.4562e-01,\n",
       "          -4.5101e-01, -1.9473e+00,  1.1545e+00, -3.8623e-01, -1.4090e-01,\n",
       "          -1.3093e+00,  9.3743e-01,  3.1932e-01,  3.5187e-01, -1.1882e+00,\n",
       "           2.5422e+00,  8.7588e-01,  2.3486e-03, -1.4809e+00,  2.3753e+00],\n",
       "         [-1.2026e-01,  1.3465e-01,  1.3459e+00,  8.6464e-01, -1.5365e+00,\n",
       "          -5.4078e-01, -4.2449e-01, -9.1620e-01,  1.8220e-01, -5.2915e-02,\n",
       "           9.3593e-01, -2.6980e+00,  1.1778e-01, -1.1334e+00, -5.0009e-01,\n",
       "          -5.8344e-02, -1.0438e+00, -4.8829e-01, -7.8148e-01,  2.3083e+00],\n",
       "         [-1.2311e+00,  1.9851e-01, -1.1727e+00,  7.1421e-01, -3.1789e-01,\n",
       "           1.5953e+00, -7.2558e-03, -5.3490e-01, -8.1400e-01,  1.4957e+00,\n",
       "           1.7295e+00,  2.0954e-01,  5.7048e-01, -1.8388e-01,  2.5345e-01,\n",
       "          -4.6100e-01,  1.8088e+00, -2.2673e+00,  1.1276e+00, -1.4450e+00],\n",
       "         [-1.1113e+00, -1.0771e+00, -2.9851e-01,  1.0985e+00,  3.5003e-01,\n",
       "           1.0587e+00, -1.4313e+00,  1.3590e+00, -2.8366e+00,  6.3582e-01,\n",
       "          -2.8958e-01,  1.0768e+00, -7.8794e-01, -9.1081e-01, -2.6965e-01,\n",
       "           2.4990e-01, -6.1577e-01, -2.9226e+00, -5.7874e-01, -1.5268e-01],\n",
       "         [ 1.4363e+00, -1.4394e+00,  2.8842e+00,  1.0096e+00, -9.3191e-01,\n",
       "          -7.7694e-01,  1.8923e-01,  8.5287e-02,  1.1989e+00, -7.1691e-01,\n",
       "          -3.5885e-01,  7.4543e-01, -9.1202e-01,  8.1208e-01, -7.6999e-02,\n",
       "           7.4048e-01,  1.1607e+00, -3.0301e-01, -1.2005e+00, -5.1704e-01],\n",
       "         [-5.2461e-01, -2.0194e+00, -1.9314e-01, -1.1055e-01,  8.2679e-01,\n",
       "          -4.3592e-01, -7.0440e-01,  4.4761e-01, -7.2805e-02, -9.9803e-01,\n",
       "          -5.5291e-01, -5.6943e-01, -4.0643e-01,  2.3562e-01,  1.1399e+00,\n",
       "          -1.0774e+00, -1.1437e+00, -1.6772e+00, -1.7576e+00, -3.8782e-01],\n",
       "         [-1.2228e+00,  3.7179e-01, -6.6334e-01, -8.3495e-01,  1.5489e+00,\n",
       "          -7.3309e-01,  8.5851e-01, -3.4789e-01, -6.2272e-01,  9.0986e-01,\n",
       "           7.7633e-01,  9.1117e-01, -4.3158e-01,  8.5096e-01, -2.9744e-01,\n",
       "           1.0368e+00, -6.0611e-01, -1.3559e+00,  2.1286e-01, -4.0974e-02],\n",
       "         [ 1.2392e+00,  7.1676e-02,  5.1044e-01,  4.2543e-02,  2.3024e+00,\n",
       "           1.1836e+00, -1.8775e-01, -9.7577e-01, -2.3321e+00, -8.5154e-01,\n",
       "           6.6201e-01,  6.0861e-02,  5.6109e-01,  1.6130e+00,  6.6088e-02,\n",
       "          -3.2672e-01,  2.1191e-02, -1.4860e+00,  2.3742e+00, -7.5007e-01],\n",
       "         [ 8.0082e-01, -1.4498e+00,  1.2773e+00,  1.7531e+00,  2.7386e-01,\n",
       "          -1.1650e+00, -2.1801e-01, -2.2038e+00, -1.2665e-01,  4.5554e-01,\n",
       "           3.2182e-01,  3.0599e-01, -5.5508e-01, -2.6035e+00, -1.5525e-01,\n",
       "           2.0853e-01, -1.5729e+00, -6.0853e-01,  4.8921e-01, -7.6786e-01]],\n",
       "        dtype=torch.float64, requires_grad=True),\n",
       " tensor([[ 0.4900,  1.5276, -0.8447, -0.5863,  0.6554,  1.3500, -0.2183, -0.2661,\n",
       "           2.6721, -0.6884,  0.1883, -2.4197,  1.4434,  0.5194,  0.2844,  1.0145,\n",
       "           0.6352, -0.3819, -0.8915, -0.9005],\n",
       "         [-0.1934, -0.9255,  0.1763,  0.7561, -0.1671,  0.7243,  1.5652,  0.4056,\n",
       "          -0.3119,  2.1779, -1.7251,  1.4338, -0.4520, -0.9234, -1.7643, -1.0578,\n",
       "           1.9255, -0.4016,  0.8224, -0.8903],\n",
       "         [ 1.4491, -0.2690,  0.3642,  3.4476, -0.9437, -1.5956, -1.4198, -0.0888,\n",
       "          -0.6690,  0.3554, -1.2442, -0.3773, -0.5129,  1.2503,  0.5735, -1.1769,\n",
       "          -0.1385, -0.3766,  0.9290, -0.8443],\n",
       "         [ 2.1798,  0.6451,  0.1952,  1.4683,  1.4828, -2.5056, -1.3736, -0.0795,\n",
       "          -0.1793, -0.8048, -0.3822, -0.1490,  0.0296, -0.7622,  0.1210,  1.0234,\n",
       "          -1.4014, -0.2538, -0.3264, -1.1739],\n",
       "         [ 0.3162, -0.7526, -1.6757, -1.7597,  2.4718, -1.2614,  0.5803, -1.0871,\n",
       "          -0.6046, -0.5963, -0.9439, -1.4231,  0.4354,  1.3517, -0.2652, -1.3948,\n",
       "           1.0006, -2.1172, -1.3865, -1.3333],\n",
       "         [-1.4368, -0.3059, -0.8853, -0.2438, -1.0007, -0.1944, -0.1283, -1.1658,\n",
       "           1.6906, -0.4906, -0.4609,  0.9476,  0.1116,  0.6387, -0.7050, -1.0279,\n",
       "           0.9302, -1.4780, -0.1807,  0.4792],\n",
       "         [-1.8240,  3.2624, -0.6654,  0.5757, -0.0220, -0.3861, -0.6324,  0.4825,\n",
       "          -0.2101, -2.1190, -2.1353, -0.1267, -0.9041, -1.2046, -0.1557, -0.7779,\n",
       "           0.6466, -1.7864, -0.4111, -0.5799],\n",
       "         [ 0.8470,  0.9970, -0.6661, -0.0191, -1.8309, -0.7693, -0.5811,  0.7687,\n",
       "           0.5081,  0.0834, -0.2935, -1.5992, -0.7206,  0.4097,  0.0949, -2.0215,\n",
       "          -1.1216, -0.6057,  0.0554,  1.1120],\n",
       "         [-0.5228, -0.0759, -0.7074,  0.0634, -0.2216, -0.8981, -1.4934, -0.8413,\n",
       "          -0.8345,  0.9567,  0.7791,  0.9133,  1.2050,  0.1361, -1.0358, -0.2724,\n",
       "          -0.0460,  1.1218, -0.7227, -0.0694],\n",
       "         [-0.6951, -0.4261, -0.0372,  1.6188, -1.1488, -2.4186,  0.6711, -0.2435,\n",
       "           0.4692, -0.9327, -0.1958,  1.0408,  1.1329,  1.9436, -1.1015,  0.2700,\n",
       "          -0.2296, -0.8179, -0.5246,  0.6056],\n",
       "         [ 0.4160, -0.9088, -1.2823,  1.6608,  0.5437,  0.5194, -0.4518, -0.5131,\n",
       "          -0.3405, -0.7194,  1.1190, -0.4448, -0.7291,  0.3396,  0.0878, -0.7665,\n",
       "           1.5683,  0.8033, -0.8725, -1.6380],\n",
       "         [-0.0919,  1.9990,  0.6602, -0.6845,  0.1576,  0.4643, -0.4568,  3.3032,\n",
       "          -0.4707,  0.3578,  0.8581, -0.0822, -1.2566, -0.2742,  0.2694,  0.6169,\n",
       "          -0.2217,  0.7283, -0.5660,  0.2042],\n",
       "         [ 0.5724,  1.0334,  0.0783, -0.7579,  1.1411, -0.0844,  0.7221,  0.7221,\n",
       "          -0.4926,  1.3367,  1.0735,  0.0597,  0.8554, -2.4776,  0.4842, -0.8254,\n",
       "          -0.3908,  0.5549,  0.6641,  0.9848],\n",
       "         [-0.9935, -0.2951,  0.5648, -0.0863,  1.3972, -0.3752, -0.2689, -0.1598,\n",
       "           2.4463, -1.8435, -2.2182,  0.6815,  1.1557, -1.0737, -0.2181,  0.3310,\n",
       "           0.8010, -0.4008,  1.1557,  0.2972],\n",
       "         [-0.5376, -0.2330, -0.8602,  1.0779,  0.0401,  1.1245, -1.2472, -0.8057,\n",
       "           0.9154,  1.4386,  0.2300, -0.1288,  0.4110,  0.5098, -0.1685,  0.6037,\n",
       "           0.5134, -0.3173, -1.4665, -1.6023],\n",
       "         [ 0.4648, -0.4465, -0.2318, -0.1651,  1.3036,  1.2679, -1.4894,  1.0691,\n",
       "          -1.0468, -0.9584, -0.5268, -0.8008,  0.3018, -0.9475, -1.7516,  0.3768,\n",
       "          -0.2014,  0.9094, -2.0916,  1.5370],\n",
       "         [-0.3460,  1.0270,  0.3873,  2.1905, -0.7893,  0.0511, -2.6706, -0.5704,\n",
       "           1.1068, -0.1510, -1.5838,  1.5005, -1.4948,  0.4663,  0.5993,  0.1350,\n",
       "           1.1442, -0.8680, -0.9006,  0.4808],\n",
       "         [-0.0825, -0.4922,  0.1318,  0.4413, -1.8859,  0.8000, -0.1882,  0.4357,\n",
       "          -0.9422, -0.2383,  1.7807, -0.0398,  0.4979, -1.6656, -0.1448, -0.7498,\n",
       "           1.6905, -1.1175, -1.3697,  0.8111],\n",
       "         [-0.3187,  0.7203, -1.1513, -0.1659,  0.0963,  0.0355,  0.5079, -0.6239,\n",
       "          -0.0753, -0.1915, -0.3162, -1.1042, -0.1884,  1.0889, -0.4869,  0.6221,\n",
       "           1.1470,  0.9666, -0.5429, -1.0311],\n",
       "         [ 0.8304, -0.2822,  1.1024,  0.6787,  1.9990,  1.3977, -0.0911, -1.5234,\n",
       "          -1.5745, -0.5558,  1.0118,  0.3733,  0.4735, -0.1922,  0.4779, -0.4529,\n",
       "           0.4566, -0.3665,  0.0745,  0.3819],\n",
       "         [-0.2482, -0.7116,  1.1157,  0.3533, -1.1078,  1.1434,  0.3407, -0.8578,\n",
       "          -1.1216, -1.4114,  0.2173,  1.3126, -0.4150, -1.2113, -1.2671,  1.1380,\n",
       "          -0.4745, -0.0988,  0.9538, -0.1863],\n",
       "         [ 0.8067,  1.1774,  0.5623, -0.3993,  0.7056,  0.1866,  0.1408,  0.7317,\n",
       "           0.6806,  2.5891,  1.7989, -1.1847,  0.0105, -0.4783,  0.2320, -0.9971,\n",
       "          -0.4840, -0.4284, -2.6858, -0.0583],\n",
       "         [ 0.9593,  1.0330,  0.6060,  0.4722, -0.5150, -0.8777, -0.5617, -0.7318,\n",
       "           0.1004,  0.2799, -1.1555, -0.6814, -1.1054, -0.4211, -0.7382, -0.1844,\n",
       "          -0.5862,  0.2770,  0.1265, -0.0075],\n",
       "         [ 1.3262,  1.2980,  0.6155, -0.4780, -0.4121, -0.2549, -0.1165, -1.4435,\n",
       "          -2.6212, -1.6214, -0.5722, -0.0859, -0.1820, -0.1925,  1.6981,  1.0455,\n",
       "          -1.2703,  0.1261, -0.5161, -0.5120],\n",
       "         [-0.7246,  0.1358,  0.4046,  2.5456, -0.1569,  0.9349,  0.4550, -0.0342,\n",
       "          -0.4020, -1.3822, -2.3207, -1.3788,  1.1948, -1.3155, -0.9266,  0.3357,\n",
       "          -0.7724,  0.2111,  1.1938, -0.0107],\n",
       "         [ 1.2660,  1.2381,  0.1100,  0.5420,  0.5417,  1.6011, -0.1108, -1.4119,\n",
       "           0.3893, -0.8433,  0.3940, -0.2347, -0.9000, -0.3221,  0.4183,  0.1931,\n",
       "           0.5461,  0.3659, -1.7197, -1.6777],\n",
       "         [-0.7586, -0.5814,  2.0047, -0.6132, -1.2012, -0.4484,  1.1181, -0.7215,\n",
       "          -0.6188,  1.2491,  0.5636, -0.0487,  0.2018,  0.3026,  1.4560,  0.2695,\n",
       "          -0.1468,  0.2927,  0.8058,  0.4796],\n",
       "         [ 0.5561,  0.5630,  1.5644,  0.8510, -1.3848,  0.5335,  0.6238,  0.9003,\n",
       "           0.3679,  0.5745, -0.4936,  0.7988,  0.6895,  1.6080, -0.9669,  0.6960,\n",
       "          -0.3066,  0.5653, -0.9828, -0.5014],\n",
       "         [-0.3957,  0.6318,  1.0938, -0.5445,  0.4184, -1.1783, -0.3429,  0.8255,\n",
       "          -1.3654, -1.0221,  0.4099,  1.9524, -0.7927,  1.1987, -0.0123, -0.8099,\n",
       "          -0.6022,  0.6241,  0.3157,  1.1887],\n",
       "         [-0.7287, -0.9740, -0.8385,  0.0634,  1.2186,  0.2020, -0.8750,  1.1884,\n",
       "           0.4209,  0.5690, -0.1489,  0.5114, -1.3988,  1.0078, -0.0334,  0.2390,\n",
       "           0.5111,  0.1245,  2.4238,  1.1443]], dtype=torch.float64,\n",
       "        requires_grad=True))"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "torch.randn(20,20,dtype=torch.double,requires_grad=True), torch.randn(30,20,dtype=torch.double,requires_grad=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b2eff3d8-2cca-42a9-bcc1-fbddae54710e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
